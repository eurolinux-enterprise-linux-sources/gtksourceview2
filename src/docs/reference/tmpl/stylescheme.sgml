<!-- ##### SECTION Title ##### -->
GtkSourceStyleScheme

<!-- ##### SECTION Short_Description ##### -->

Object controlling apperance of #GtkSourceView

<!-- ##### SECTION Long_Description ##### -->
<para>
#GtkSourceStyleScheme contains all the text styles to be used
in #GtkSourceView and #GtkSourceBuffer. For instance, it contains
text styles for syntax highlighting, it may contain foreground
and background color for non-highlighted text, etc.
</para>

<para>
Style schemes are stored in XML files. The format of scheme file is
the following.
</para>

<para>
The toplevel tag in a style scheme file is <code>&lt;style-scheme&gt;</code>.
It has the following attributes:
<variablelist>
<varlistentry>
<term><code>id</code> (mandatory)</term>
<listitem><para>
Identifier for the style scheme. This is must be unique among style schemes.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>name</code> (mandatory)</term>
<listitem><para>
Name of the style scheme. This is the name of the scheme to display to user, e.g.
in a preferences dialog.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>_name</code></term>
<listitem><para>
This is the same as <code>name</code> attribute, except it will be translated.
<code>name</code> and <code>_name</code> may not be used simultaneously.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>parent-scheme</code> (optional)</term>
<listitem><para>
Style schemes may have <emphasis>parent</emphasis> schemes: all styles but those specified
in the scheme will be taken from the parent scheme. In this way a scheme may
be customized without copying all its content.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>version</code> (mandatory)</term>
<listitem><para>
Style scheme format identifier. At the moment it must be "1.0".
</para></listitem>
</varlistentry>
</variablelist>
</para>

<para>
<code>style-scheme</code> tag may contain the following tags:
<variablelist>
<varlistentry>
<term><code>author</code></term>
<listitem><para>
Name of the style scheme author.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>description</code></term>
<listitem><para>
Description of the style scheme.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>_description</code></term>
<listitem><para>
Same as <code>description</code> except it will be localized.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>color</code> tags</term>
<listitem><para>
These define color names to be used in <code>style</code> tags.
It has two attributes: <code>name</code> and <code>value</code>.
<code>value</code> is the hexadecimal color specification like
"&num;000000" or named color understood by Gdk prefixed with "&num;",
e.g. "&num;beige".
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>style</code> tags</term>
<listitem><para>
See below for their format description.
</para></listitem>
</varlistentry>
</variablelist>
</para>

<para>
Each <code>style</code> tag describes a single element of style scheme (it corresponds
to #GtkSourceStyle object). It has the following attributes:
<variablelist>
<varlistentry>
<term><code>name</code> (mandatory)</term>
<listitem><para>
Name of the style. It can be anything, syntax highlighting uses <emphasis>lang-id:style-id</emphasis>, 
and there are few special styles which are used to control general appearance
of the text. Style scheme may contain other names to be used in an application. For instance,
it may define color to highlight compilation errors in a build log or a color for
bookmarks.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>foreground</code></term>
<listitem><para>
Foreground color. It may be name defined in one of <code>color</code> tags, or value in 
hexadecimal format, e.g. "&num;000000", or symbolic name understood
by Gdk, prefixed with "&num;", e.g. "&num;magenta" or "&num;darkred".
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>background</code></term>
<listitem><para>
Background color.
</para></listitem>
</varlistentry>
<varlistentry>
<term><code>italic</code></term>
<listitem><para>"true" or "false"</para></listitem>
</varlistentry>
<varlistentry>
<term><code>bold</code></term>
<listitem><para>"true" or "false"</para></listitem>
</varlistentry>
<varlistentry>
<term><code>underline</code></term>
<listitem><para>"true" or "false"</para></listitem>
</varlistentry>
<varlistentry>
<term><code>strikethrough</code></term>
<listitem><para>"true" or "false"</para></listitem>
</varlistentry>
</variablelist>
</para>

<para>
The following are names of styles which control #GtkSourceView appearance:
<variablelist>
<varlistentry>
<term><code>text</code></term>
<listitem><para>Default style of text.</para></listitem>
</varlistentry>
<varlistentry>
<term><code>selection</code></term>
<listitem><para>Style of selected text.</para></listitem>
</varlistentry>
<varlistentry>
<term><code>selection-unfocused</code></term>
<listitem><para>Style of selected text when the widget doesn't have input focus.</para></listitem>
</varlistentry>
<varlistentry>
<term><code>cursor</code></term>
<listitem><para>Text cursor style. Only <code>foreground</code> attribute is used
for this style</para></listitem>
</varlistentry>
<varlistentry>
<term><code>secondary-cursor</code></term>
<listitem><para>Secondary cursor style (used in bidi text). Only <code>foreground</code> attribute
is used for this style. If this is not set while "cursor" is, then a color between text background
and cursor colors is chosen, so it is enough to use "cursor" style only.</para></listitem>
</varlistentry>
<varlistentry>
<term><code>current-line</code></term>
<listitem><para>Current line style. Only <code>background</code> attribute is used</para></listitem>
</varlistentry>
<varlistentry>
<term><code>line-numbers</code></term>
<listitem><para>Text and background colors for the left margin, on which line numbers are 
drawn</para></listitem>
</varlistentry>
<varlistentry>
<term><code>bracket-match</code></term>
<listitem><para>Style to use for matching brackets.</para></listitem>
</varlistentry>
<varlistentry>
<term><code>bracket-mismatch</code></term>
<listitem><para>Style to use for mismatching brackets.</para></listitem>
</varlistentry>
</variablelist>
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#GtkSourceStyle, #GtkSourceStyleSchemeManager
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GtkSourceStyleScheme ##### -->
<para>
<structname>GtkSourceStyleScheme</structname> structure contains only
private members and should not be accessed directly.
</para>


<!-- ##### ARG GtkSourceStyleScheme:description ##### -->
<para>

</para>

<!-- ##### ARG GtkSourceStyleScheme:filename ##### -->
<para>

</para>

<!-- ##### ARG GtkSourceStyleScheme:id ##### -->
<para>

</para>

<!-- ##### ARG GtkSourceStyleScheme:name ##### -->
<para>

</para>

<!-- ##### FUNCTION gtk_source_style_scheme_get_id ##### -->
<para>

</para>

@scheme: 
@Returns: 


<!-- ##### FUNCTION gtk_source_style_scheme_get_name ##### -->
<para>

</para>

@scheme: 
@Returns: 


<!-- ##### FUNCTION gtk_source_style_scheme_get_description ##### -->
<para>

</para>

@scheme: 
@Returns: 


<!-- ##### FUNCTION gtk_source_style_scheme_get_authors ##### -->
<para>

</para>

@scheme: 
@Returns: 


<!-- ##### FUNCTION gtk_source_style_scheme_get_filename ##### -->
<para>

</para>

@scheme: 
@Returns: 


<!-- ##### FUNCTION gtk_source_style_scheme_get_style ##### -->
<para>

</para>

@scheme: 
@style_id: 
@Returns: 


